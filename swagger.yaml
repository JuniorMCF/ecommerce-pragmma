openapi: 3.0.0
info:
  title: Ecommerce API
  version: 1.0.0
  description: API de autenticación para un sistema de ecommerce con manejo de tokens JWT en cookies
servers:
  - url: http://localhost:3000/api/v1

paths:
  /auth/register:
    post:
      summary: Registro de un nuevo usuario
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  description: Nombre del usuario
                email:
                  type: string
                  format: email
                  description: Correo electrónico del usuario
                password:
                  type: string
                  description: Contraseña del usuario
      responses:
        "201":
          description: Usuario creado exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ID del usuario
                  name:
                    type: string
                    description: Nombre del usuario
                  email:
                    type: string
                    description: Correo electrónico del usuario
                  message:
                    type: string
                    description: Mensaje de éxito
        "409":
          description: El correo electrónico ya está registrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de error
        "400":
          description: Error al crear el usuario
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de error

  /auth/login:
    post:
      summary: Inicio de sesión de un usuario
      tags:
        - Auth
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  format: email
                  description: Correo electrónico del usuario
                password:
                  type: string
                  description: Contraseña del usuario
      responses:
        "200":
          description: Inicio de sesión exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ID del usuario
                  name:
                    type: string
                    description: Nombre del usuario
                  email:
                    type: string
                    description: Correo electrónico del usuario
                  token:
                    type: string
                    description: Token de autenticación
                  message:
                    type: string
                    description: Mensaje de éxito
        "400":
          description: Credenciales inválidas
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de error

  /auth/verify:
    get:
      summary: Verificación del token de autenticación
      tags:
        - Auth
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Token válido
          content:
            application/json:
              schema:
                type: object
                properties:
                  user:
                    type: object
                    properties:
                      id:
                        type: string
                        description: ID del usuario
                      email:
                        type: string
                        description: Correo electrónico del usuario
                  message:
                    type: string
                    description: "Token válido"
        "401":
          description: Token inválido o no autorizado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de error

  /auth/logout:
    post:
      summary: Cierre de sesión del usuario
      tags:
        - Auth
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Cierre de sesión exitoso
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de éxito de cierre de sesión
        "404":
          description: Token no encontrado en cookies
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de error indicando que no se encontró el token
  /categories:
    post:
      summary: Crear una nueva categoría
      tags:
        - Categories
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                categoryName:
                  type: string
                  description: Nombre de la categoría
      responses:
        "201":
          description: Categoría creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ID de la categoría
                  categoryName:
                    type: string
                    description: Nombre de la categoría
                  message:
                    type: string
                    description: Mensaje de éxito
        "400":
          description: Error al crear la categoría
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de error

  /categories/{categoryId}:
    put:
      summary: Actualizar una categoría existente
      tags:
        - Categories
      security:
        - bearerAuth: []
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
          description: ID de la categoría a actualizar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                categoryName:
                  type: string
                  description: Nombre actualizado de la categoría
      responses:
        "200":
          description: Categoría actualizada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ID de la categoría
                  categoryName:
                    type: string
                    description: Nombre actualizado de la categoría
                  message:
                    type: string
                    description: Mensaje de éxito
        "404":
          description: Categoría no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de error
        "400":
          description: Error al actualizar la categoría
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de error

    get:
      summary: Obtener información de una categoría
      tags:
        - Categories
      security:
        - bearerAuth: []
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
          description: ID de la categoría a obtener
      responses:
        "200":
          description: Categoría encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ID de la categoría
                  categoryName:
                    type: string
                    description: Nombre de la categoría
                  message:
                    type: string
                    description: Mensaje de éxito
        "404":
          description: Categoría no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de error

    delete:
      summary: Eliminar una categoría existente
      tags:
        - Categories
      security:
        - bearerAuth: []
      parameters:
        - name: categoryId
          in: path
          required: true
          schema:
            type: string
          description: ID de la categoría a eliminar
      responses:
        "204":
          description: Categoría eliminada exitosamente
        "404":
          description: Categoría no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de error
  /categories/all:
    get:
      summary: Obtener todas las categorias
      tags:
        - "Categories"
      responses:
        "200":
          description: Lista de categorias
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Category'

  /categories/{categoryId}/products:
    get:
      summary: Get products by category
      description: Retrieve a category by its ID and return all products associated with it.
      tags:
        - Categories
      parameters:
        - in: path
          name: categoryId
          required: true
          schema:
            type: string
          description: ID of the category to retrieve products for
      responses:
        '200':
          description: Successful response with category and associated products
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: string
                    description: ID of the category
                    example: "64b8a0e12ab5f2c38c24db47"
                  categoryName:
                    type: string
                    description: Name of the category
                    example: "Electronics"
                  products:
                    type: array
                    items:
                      type: object
                      properties:
                        id:
                          type: string
                          description: Product ID
                          example: "64c6a2f34e5f13f57d0b2f68"
                        name:
                          type: string
                          description: Name of the product
                          example: "Smartphone"
                        price:
                          type: number
                          description: Price of the product
                          example: 299.99
        '404':
          description: Category or products not found
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Category not found"
        '500':
          description: Server error
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Internal server error"
  /products:
    post:
      summary: Crear un nuevo producto
      tags:
        - "Products"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                productName:
                  type: string
                  description: Nombre del producto
                description:
                  type: string
                  description: Descripción del producto
                price:
                  type: number
                  format: float
                  description: Precio del producto
                stock:
                  type: integer
                  description: Cantidad en inventario
                file:
                  type: string
                  format: binary
                  description: Archivo de imagen
                categoryId:
                  type: string
                  description: ID de la categoría
                
              required:
                - productName
                - description
                - price
                - stock
                - file
                - categoryId
      responses:
        "201":
          description: Producto creado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "400":
          description: Error al crear el producto
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de error

  /products/{productId}:
    get:
      summary: Obtener un producto por ID
      tags:
        - "Products"
      parameters:
        - name: productId
          in: path
          required: true
          description: ID del producto
          schema:
            type: string
      responses:
        "200":
          description: Producto encontrado
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "404":
          description: Producto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de error

    put:
      summary: Actualizar un producto existente
      tags:
        - "Products"
      security:
        - bearerAuth: []
      parameters:
        - name: productId
          in: path
          required: true
          description: ID del producto
          schema:
            type: string
      requestBody:
        required: true
        content:
          multipart/form-data:
            schema:
              type: object
              properties:
                productName:
                  type: string
                  description: Nombre del producto
                description:
                  type: string
                  description: Descripción del producto
                price:
                  type: number
                  format: float
                  description: Precio del producto
                stock:
                  type: integer
                  description: Cantidad en inventario
                file:
                  type: string
                  format: binary
                  description: Archivo de Imagen
                categoryId:
                  type: string
                  description: ID de la categoría
              required:
                - productName
                - price
                - stock
                - categoryId
      responses:
        "200":
          description: Producto actualizado exitosamente
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Product'
        "404":
          description: Producto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de error

    delete:
      summary: Eliminar un producto
      tags:
        - "Products"
      security:
        - bearerAuth: []
      parameters:
        - name: productId
          in: path
          required: true
          description: ID del producto
          schema:
            type: string
      responses:
        "204":
          description: Producto eliminado exitosamente
        "404":
          description: Producto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    description: Mensaje de error

  /products/all:
    get:
      summary: Obtener todos los productos
      tags:
        - "Products"
      responses:
        "200":
          description: Lista de productos
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Product'
  /cart/add:
    post:
      summary: Agregar un producto al carrito de compras
      tags:
        - "Cart"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                  description: ID del producto a agregar
                quantity:
                  type: integer
                  description: Cantidad del producto
              required:
                - productId
                - quantity
      responses:
        "200":
          description: Producto agregado al carrito exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cart'
                  message:
                    type: string
                  status:
                    type: integer
        "400":
          description: Error en los datos proporcionados o en el carrito
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "404":
          description: Producto no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /cart/remove:
    post:
      summary: Remover un producto del carrito de compras
      tags:
        - "Cart"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                productId:
                  type: string
                  description: ID del producto a remover
              required:
                - productId
      responses:
        "200":
          description: Producto removido del carrito exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cart'
                  message:
                    type: string
                  status:
                    type: integer
        "404":
          description: Producto no encontrado en el carrito
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
        "400":
          description: Error en los datos proporcionados
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /cart:
    get:
      summary: Obtener el carrito de compras del usuario
      tags:
        - "Cart"
      security:
        - bearerAuth: []
      responses:
        "200":
          description: Cart obtenido exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Cart'
                  message:
                    type: string
                  status:
                    type: integer
        "500":
          description: Error al obtener el carrito
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
  /orders:
    post:
      summary: Crear una nueva orden
      tags:
        - "Order"
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                paymentMethod:
                  type: string
                  description: Método de pago utilizado para la orden
                deliveryMethod:
                  type: string
                  description: Método de entrega seleccionado
              required:
                - paymentMethod
                - deliveryMethod
      responses:
        "201":
          description: Orden creada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Order'
                  message:
                    type: string
                  status:
                    type: integer
        "400":
          description: Cart vacío o no encontrado
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

  /orders/{orderId}:
    get:
      summary: Obtener una orden por ID
      tags:
        - "Order"
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
          description: ID de la orden
      responses:
        "200":
          description: Orden encontrada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Order'
                  message:
                    type: string
                  status:
                    type: integer
        "404":
          description: Orden no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

    put:
      summary: Actualizar una orden existente
      tags:
        - "Order"
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
          description: ID de la orden a actualizar
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                userId:
                  type: string
                  description: ID del usuario
                paymentMethod:
                  type: string
                  description: Método de pago
                deliveryMethod:
                  type: string
                  description: Método de entrega
                status:
                  type: string
                  description: Estado de la orden
                products:
                  type: array
                  items:
                    $ref: '#/components/schemas/OrderDetail'
              required:
                - userId
                - paymentMethod
                - deliveryMethod
      responses:
        "200":
          description: Orden actualizada exitosamente
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    $ref: '#/components/schemas/Order'
                  message:
                    type: string
                  status:
                    type: integer
        "404":
          description: Orden no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

    delete:
      summary: Eliminar una orden existente
      tags:
        - "Order"
      security:
        - bearerAuth: []
      parameters:
        - name: orderId
          in: path
          required: true
          schema:
            type: string
          description: ID de la orden a eliminar
      responses:
        "204":
          description: Orden eliminada exitosamente
        "404":
          description: Orden no encontrada
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    Category:
      type: object
      properties:
        id:
          type: string
          description: ID de categoria

        categoryName:
          type: string
          description: Nombre de la categoria

        products:
          type: array
          description: Array de productos asociados a la categoría (puede ser vacío o nulo)
          nullable: true
          items:
            $ref: '#/components/schemas/Product'
          example: []
    Product:
      type: object
      properties:
        id:
          type: string
          description: ID del producto
        productName:
          type: string
          description: Nombre del producto
        description:
          type: string
          description: Descripción del producto
        price:
          type: number
          format: float
          description: Precio del producto
        stock:
          type: integer
          description: Cantidad en inventario
        imageUrl:
          type: string
          description: URL de la imagen
        categoryId:
          type: string
          description: ID de la categoría
      required:
        - productName
        - price
        - stock
        - categoryId
    Cart:
      type: object
      properties:
        id:
          type: string
          description: ID del carrito
        userId:
          type: string
          description: ID del usuario asociado
        cartDetails:
          type: array
          items:
            $ref: '#/components/schemas/CartDetail'
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación del carrito
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización del carrito

    CartDetail:
      type: object
      properties:
        productId:
          type: string
          description: ID del producto en el carrito
        quantity:
          type: integer
          description: Cantidad del producto en el carrito
        price:
          type: number
          format: float
          description: Precio del producto en el momento de la adición
    Order:
      type: object
      properties:
        id:
          type: string
          description: ID de la orden
        userId:
          type: string
          description: ID del usuario que realizó el pedido
        total:
          type: number
          format: float
          description: Total de la orden
        paymentMethod:
          type: string
          description: Método de pago
        deliveryMethod:
          type: string
          description: Método de entrega
        status:
          type: string
          description: Estado de la orden
        orderDetails:
          type: array
          items:
            $ref: '#/components/schemas/OrderDetail'
        createdAt:
          type: string
          format: date-time
          description: Fecha de creación de la orden
        updatedAt:
          type: string
          format: date-time
          description: Fecha de última actualización de la orden

    OrderDetail:
      type: object
      properties:
        productId:
          type: string
          description: ID del producto en la orden
        quantity:
          type: integer
          description: Cantidad del producto en la orden
        price:
          type: number
          format: float
          description: Precio del producto en el momento de la compra